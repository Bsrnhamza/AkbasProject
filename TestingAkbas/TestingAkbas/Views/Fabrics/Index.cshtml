@model IEnumerable<TestingAkbas.Models.Fabric>
@{ ViewData["Title"] = "Index"; }

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table table-hover">
    <thead>
        <tr>
            <th>Quality Class</th>
            <th>Fabric Code</th>
            <th>Qualities</th>
            <th>Quality Name</th>
            <th>Quality Group</th>
            <th>Quality Composition</th>
            <th>Pattern Type</th>
            <th>Width</th>
            <th>Weight</th>
            <th>Raw Fabric Price</th>
            <th>Domestic Price</th>
            <th>Export Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <td class="@GetQualityClassCssClass(item.QualityClass)">
        @Html.DisplayFor(modelItem => item.QualityClass)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.FabricCode)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.Qualities)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.QualityName)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.QualityGroup)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.QualityComposition)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.PatternType)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.Width)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.Weight)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.RawFabricPrice)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.DomesticPrice)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.ExportPrice)
    </td>
    <td>
        <div class="btn-group" role="group">
            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
            <form asp-action="Delete" asp-route-id="@item.Id" onsubmit="return confirm('Are you sure you want to delete this item?');">
                <button type="submit" class="btn btn-danger">Delete</button>
            </form>
        </div>
    </td>
</tr>
}
    </tbody>
</table>

@section Styles {
    <link rel="stylesheet" href="~/css/custom.css" />
}

@functions { public string GetQualityClassCssClass(string qualityClass)
    {
        switch (qualityClass?.ToLower())
        {
            case "viscose":
                return "quality-class-viscose";
            case "rayon":
            case "rynsignart":
                return "quality-class-rayon";
            case "cotton":
                return "quality-class-cotton";
            case "nylon":
                return "quality-class-nylon";
            case "polyester":
            case "pesdouble":
                return "quality-class-polyester";
            case "tencel":
            case "modal":
                return "quality-class-tencel";
            case "linen":
                return "quality-class-linen";
            case "jacquard":
                return "quality-class-jacquard";
            case "mix":
            case "yarndyed":
                return "quality-class-mix";
            default:
                return "";
        }
    }

    public string GetQualitiesCssClass(string qualities)
    {
        switch (qualities?.ToLower())
        {
            case "m":
                return "qualities-m";
            case "a":
                return "qualities-a";
            case "n":
                return "qualities-n";
            default:
                return "";
        }
    } }