@model IEnumerable<TestingAkbas.Models.Fabric>
@{ ViewData["Title"] = "";
                Layout = "_FabricsLayout"; }

@section Styles {
    <link rel="stylesheet" href="~/css/custom.css" />
}

<button type="button" id="exportButton" class="btn btn-outline-success">Export to Excel</button>

<div class="currency-info-wrapper">
    <div class="currency-info">
        EURO: 34, 7000 TL&nbsp;&nbsp;&nbsp;&nbsp;USD: 32, 5000 TL&nbsp;&nbsp;&nbsp;&nbsp;GBP: 41, 9100 TL&nbsp;&nbsp;&nbsp;&nbsp;€/$: 1, 0677&nbsp;&nbsp;&nbsp;&nbsp;GBP/$: 1, 2700
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<table class="table table-hover" id="fabricTable">
    <thead>
        <tr>
            <th>Quality Class</th>
            <th>
                Fabric Code
                <div class="filter-section">
                    <label for="fabricCodeFilter" class="sr-only"></label>
                    <input type="text" id="fabricCodeSearch" placeholder="Search Fabric Code">
                </div>
            </th>
            <th>Qualities</th>
            <th>
                Quality Name
                <div class="filter-section">
                    <label for="qualityNameFilter" class="sr-only"></label>
                    <input type="text" id="qualityNameSearch" placeholder="Search Quality Name">
                </div>
            </th>
            <th>
                Quality Group
                <div class="filter-section">
                    <label for="qualityGroupFilter" class="sr-only"></label>
                    <input type="text" id="qualityGroupSearch" placeholder="Search Quality Group">
                </div>
            </th>
            <th>
                Width
                <div class="filter-section">
                    <label for="minWidth" class="sr-only">Min Width</label>
                    <input type="number" id="minWidth" placeholder="Min"><br />
                    <label for="maxWidth" class="sr-only">Max Width</label>
                    <input type="number" id="maxWidth" placeholder="Max">
                </div>
            </th>
            <th>
                Weight
                <div class="filter-section">
                    <label for="minWeight" class="sr-only">Min Weight</label>
                    <input type="number" id="minWeight" placeholder="Min"><br />
                    <label for="maxWeight" class="sr-only">Max Weight</label>
                    <input type="number" id="maxWeight" placeholder="Max">
                </div>
            </th>
            <th>Raw Fabric Price</th>
            <th>Domestic Price</th>
            <th>Export Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr data-fabric-code="@item.FabricCode" data-quality-name="@item.QualityName" data-quality-group="@item.QualityGroup">
    <td class="@GetQualityClassCssClass(item.QualityClass)">
        @Html.DisplayFor(modelItem => item.QualityClass)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.FabricCode)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.Qualities)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.QualityName)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.QualityGroup)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.Width)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.Weight)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.RawFabricPrice)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.DomesticPrice)
    </td>
    <td class="@GetQualitiesCssClass(item.Qualities)">
        @Html.DisplayFor(modelItem => item.ExportPrice)
    </td>
</tr>}
    </tbody>
</table>

<script>
    $(document).ready(function () {
        function filterTable() {
            var fabricCodeSearch = $('#fabricCodeSearch').val().toLowerCase();
            var qualityNameSearch = $('#qualityNameSearch').val().toLowerCase();
            var qualityGroupSearch = $('#qualityGroupSearch').val().toLowerCase();
            var minWidth = parseFloat($('#minWidth').val()) || -Infinity;
            var maxWidth = parseFloat($('#maxWidth').val()) || Infinity;
            var minWeight = parseFloat($('#minWeight').val()) || -Infinity;
            var maxWeight = parseFloat($('#maxWeight').val()) || Infinity;

            $('#fabricTable tbody tr').each(function () {
                var row = $(this);
                var rowFabricCode = row.find('td').eq(1).text().toLowerCase();
                var rowQualityName = row.find('td').eq(3).text().toLowerCase();
                var rowQualityGroup = row.find('td').eq(4).text().toLowerCase();
                var rowWidth = parseFloat(row.find('td').eq(5).text()) || 0;
                var rowWeight = parseFloat(row.find('td').eq(6).text()) || 0;

                var isWidthInRange = (rowWidth >= minWidth) && (rowWidth <= maxWidth);
                var isWeightInRange = (rowWeight >= minWeight) && (rowWeight <= maxWeight);

                var matchesFabricCode = (fabricCodeSearch === "" || rowFabricCode.includes(fabricCodeSearch));
                var matchesQualityName = (qualityNameSearch === "" || rowQualityName.includes(qualityNameSearch));
                var matchesQualityGroup = (qualityGroupSearch === "" || rowQualityGroup.includes(qualityGroupSearch));

                if (matchesFabricCode &&
                    matchesQualityName &&
                    matchesQualityGroup &&
                    isWidthInRange &&
                    isWeightInRange) {
                    row.show();
                } else {
                    row.hide();
                }
            });
        }

        // Olay dinleyicileri
        $('#fabricCodeSearch, #qualityNameSearch, #qualityGroupSearch, #minWidth, #maxWidth, #minWeight, #maxWeight').on('input', function () {
            filterTable();
        });

        // Sayfa yüklendiğinde filtreleme işlemini yap
        filterTable();

        // Export to Excel butonuna tıklama olayını yakala
        $('#exportButton').on('click', function () {
            exportVisibleDataToExcel();
        });
    });

</script>

@functions { public string GetQualityClassCssClass(string qualityClass)
            {
                switch (qualityClass?.ToLower())
                {
                    case "viscose":
                        return "quality-class-viscose";
                    case "rayon":
                    case "rynsignart":
                        return "quality-class-rayon";
                    case "cotton":
                        return "quality-class-cotton";
                    case "nylon":
                        return "quality-class-nylon";
                    case "polyester":
                    case "pesdouble":
                        return "quality-class-polyester";
                    case "tencel":
                    case "modal":
                        return "quality-class-tencel";
                    case "linen":
                        return "quality-class-linen";
                    case "jacquard":
                        return "quality-class-jacquard";
                    case "mix":
                    case "yarndyed":
                        return "quality-class-mix";
                    default:
                        return "";
                }
            }

            public string GetQualitiesCssClass(string qualities)
            {
                switch (qualities?.ToLower())
                {
                    case "m":
                        return "qualities-m";
                    case "a":
                        return "qualities-a";
                    case "n":
                        return "qualities-n";
                    default:
                        return "";
                }
            } }
